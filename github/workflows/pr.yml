name: Build-Analyze
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Dependencies Scan
        if: 1 > 2
        run: mvn clean verify -DskipTests -Pcve

      - name: Unit Testing
        run: mvn test -Put

      - name: Integration Testing
        run: mvn test -Pit

      # Quality Gate
      - name: Quality Gate
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Check Quality Gate
      - name: Check Quality Gate
        run: |
          # Vérifier que les métriques Sonar sont conformes aux attentes
          if [ $(sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} | grep -o "Quality Gate: Passed" | wc -l) -eq 0 ]; then
            echo "Quality Gate failed!"
            exit 1
          else
            echo "Quality Gate passed!"
          fi

          # Vérifier que la couverture de tests est supérieure ou égale à 95%
          if [ $(sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} | grep -o "Coverage" | cut -d":" -f2 | tr -d "% ") -lt 95 ]; then
            echo "Coverage is less than 95%!"
            exit 1
          else
            echo "Coverage is greater than or equal to 95%."
          fi

          # Vérifier que le nombre de bugs, vulnérabilités et erreurs est nul
          if [ $(sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} | grep -o "Bugs: 0" | wc -l) -eq 0 ]; then
            echo "Bugs found!"
            exit 1
          fi
          if [ $(sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} | grep -o "Vulnerabilities: 0" | wc -l) -eq 0 ]; then
            echo "Vulnerabilities found!"
            exit 1
          fi
          if [ $(sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} | grep -o "Major issues: 0" | wc -l) -eq 0 ]; then
            echo "Major issues found!"
            exit 1
          fi